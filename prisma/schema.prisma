generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id          String   @id @default(cuid())
  name        String   @unique
  school_logo String
  about       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  admin      Admin        @relation(fields: [adminId], references: [id])
  adminId    String
  students   Student[]
  Employee   Employee[]
  Subject    Subject[]
  Department Department[]
  Section    Section[]
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  school School[]
}

model Employee {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  bio_pic   String?
  password  String
  role      Role
  bio       Json?
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  school    School    @relation(fields: [schoolId], references: [id])
  schoolId  String
  subject   Subject   @relation(fields: [subjectId], references: [id])
  subjectId String
  students  Student[]
  sections  Section[]
}

model Student {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  bio_pic   String?
  password  String
  bio       Json?
  verified  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  school    School     @relation(fields: [schoolId], references: [id])
  schoolId  String
  section   Section    @relation(fields: [sectionId], references: [id])
  sectionId String
  teachers  Employee[]
  subjects  Subject[]
}

model Subject {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  school   School     @relation(fields: [schoolId], references: [id])
  schoolId String
  student  Student[]
  Employee Employee[]
}

model Department {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  school   School    @relation(fields: [schoolId], references: [id])
  schoolId String
  section  Section[]
}

model Section {
  id   String @id @default(cuid())
  name String @unique

  school       School     @relation(fields: [schoolId], references: [id])
  schoolId     String
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId String
  Student      Student[]
  teachers     Employee[]
}

enum Role {
  TEACHER
  EMPLOYEE
}
